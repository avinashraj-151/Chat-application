// data to yaha tak aayaga ab hamko send kar na esko database me uski liya phele hama model define karna phara gaya ki data ka scheme kisa rahaga
// console.clear();
import UserModel from "../Model/UserModel.js";
import userMessage from "../Model/userMessage.js";
export const Register = async (req, res, next) => {
  try {
    // console.log(req.body);
    const { password, email, username } = req.body;

    // check username exit or not
    const usernameCheck = await UserModel.findOne({ username: username });
    if (usernameCheck) {
      return res.json({
        msg: "username already exist",
        status: false,
      });
    }
    const emailCheck = await UserModel.findOne({ email: email });
    // check email is exist or not
    if (emailCheck) {
      return res.json({
        msg: "email already exist",
        status: false,
      });
    } else {
      // i am used insertone insted of create or insertmany it says insertone is not a function bcz in moongse there is not a function of a insertone but in mongodb insert one is a function
      const newUser = await UserModel.create(req.body);
      // in return it give me the new user data with the _id is automatically generated by the monogodb
      // console.log(newUser);
      res.json({
        msg: "user registered successfully",
        status: true,
      });
    }
  } catch (error) {
    // console.log(error);
    next(error);
  }
};

export const Login = async (req, res, next) => {
  try {
    // console.log(req.body);
    const { username, password } = req.body;
    //check the username exists in the database
    const usernameCheck = await UserModel.findOne({ username: username });
    if (!usernameCheck) {
      res.json({
        msg: "username does not exist",
        status: false,
      });
    } else {
      if (usernameCheck.password === password) {
        res.json({
          msg: "user logged in successfully",
          status: true,
        });
      } else {
        res.json({
          msg: "password does not match",
          status: false,
        });
      }
    }
  } catch (error) {
    next(error);
  }
};

export const Alluser = async (req, res, next) => {
  try {
    // console.log(req.params.user_name);
    const Allusername = await UserModel.find(
      {
        username: {
          $ne: req.params.user_name,
        },
      },
      {
        username: 1,
        email: 1,
      }
    );
    // console.log(Allusername);
    res.json({ userdata: Allusername, status: true });
  } catch (error) {
    next(error);
  }
};

export const userdata = async (req, res, next) => {
  try {
    // console.log(req.body);
    const { previousname, newname } = req.body;
    // console.log(typeof newname);
    // const usernameCheck = await UserModel.findOne({ username: previousname });
    // console.log(usernameCheck);
    // here we change the username to newname  but we have to chnage the all message to that previousname
    const userupdate = await UserModel.updateOne(
      {
        username: previousname,
      },
      {
        $set: { username: newname },
      }
    );
    const reciverupdate = await userMessage.updateMany(
      {
        receiver: previousname,
      },
      {
        $set: { receiver: newname },
      }
    );
    const senderupdate = await userMessage.updateMany(
      {
        sender: previousname,
      },
      {
        $set: { sender: newname },
      }
    );
    // console.log(messageupdate);
    res.json({ status: true });
  } catch (error) {
    next(error);
  }
};
